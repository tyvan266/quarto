[
  {
    "objectID": "posts/gaps-and-islands/post.html",
    "href": "posts/gaps-and-islands/post.html",
    "title": "The Gaps and Islands Problem",
    "section": "",
    "text": "The gaps and islands problem arises from analyzing duration data as commonly captured in databases. Duration data (or date ranges data) are individual events recorded with a start datetime and end datetime. Rows in the table correspond to unique events (or activity times) that some individual is experiencing or undergoing. As individuals (ID) may have one or more event activity, such duration data are often stored in long-form as date ranges.\n\n\n\n\n\n\nNote\n\n\n\nFor simplicity, we assume only one type of event under study — the data can be generalized to include an event-type field.\n\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\n\nset.seed(12345)\n\n# 10 individuals\nID &lt;- 1:10\n\n# 3 to 7 events per person \nn_events &lt;- sample(3:7, 10, replace = TRUE)\n\nduration_data &lt;- tibble(ID = rep(ID, n_events)) |&gt; \n  mutate(\n    start_date = \n      sample(seq(as.Date('2022-01-01'), as.Date('2022-12-31'), by = \"day\"), n(), replace = TRUE),\n    # 3 days - 2 months episodes \n    end_date = start_date + sample(3:60, n(), replace = TRUE)   \n  ) |&gt; \n  arrange(ID, start_date) |&gt; \n  group_by(ID) |&gt; \n  mutate(eventID = row_number())\n\n\nFor example:\n\nhead(duration_data, n=15) |&gt; kable()\n\n\n\n\nID\nstart_date\nend_date\neventID\n\n\n\n\n1\n2022-02-09\n2022-03-06\n1\n\n\n1\n2022-07-31\n2022-08-09\n2\n\n\n1\n2022-09-14\n2022-11-10\n3\n\n\n1\n2022-10-13\n2022-11-10\n4\n\n\n1\n2022-10-21\n2022-11-23\n5\n\n\n2\n2022-01-12\n2022-02-20\n1\n\n\n2\n2022-01-14\n2022-02-08\n2\n\n\n2\n2022-09-16\n2022-11-03\n3\n\n\n2\n2022-11-24\n2022-12-11\n4\n\n\n3\n2022-01-16\n2022-01-23\n1\n\n\n3\n2022-03-21\n2022-05-05\n2\n\n\n3\n2022-04-16\n2022-05-23\n3\n\n\n3\n2022-05-21\n2022-06-04\n4\n\n\n3\n2022-05-28\n2022-06-23\n5\n\n\n3\n2022-07-11\n2022-08-08\n6\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo reveal the code how to simulate the demo data, click the Code text to expand above.\n\n\nHere, individual-1 experiences 5 event episodes (5 eventIDs), with the first one occurring on 2/9 and lasting for 25 days until 3/6. But observe that eventID=4 overlaps with eventID=5 for individual-1, where event 5 beginning on 10/21 starts before event 4 has ended on 11/10.\n\n\nDescribing the patterns visually is useful. We plot all individual date ranges colored by individual ID, adding a position_dodge parameter so overlaps are revealed instead of lying right on top one another.\n\n\nCode\nlibrary(ggplot2)\n\nggplot(duration_data |&gt; filter(ID &lt;= 5),\n       aes(y = factor(ID), xmin = start_date, xmax = end_date, color = factor(ID))) +\n  geom_linerange(position = position_dodge2(width = .5), linewidth = 2) +\n  theme_bw() + \n  xlab(\"Start/ End Dates\") + ylab(\"Individual ID\") +\n  scale_x_date(date_breaks = \"1 month\") + \n  theme(\n    axis.text.x = element_text(size = 16, angle = 45),\n    axis.text.y = element_text(size = 16),\n    axis.title.x = element_text(size = 24),\n    axis.title.y = element_text(size = 24),\n    legend.position = 'none'\n  )\n\n\n\n\n\nDuration patterns by subject\n\n\n\n\n\n\n\nGiven the set-up, what is our goal state? Or, how do we want to collapse the data? Our input data is structured as one row per event interval (date range) per person. The desired output data is one row per coverage interval per person. By coverage, we mean a continuous block of time, defined by a start date and end date, during which the individual is experience some event (perhaps more than one).\n\n\n\n\n\n\nNote\n\n\n\nCoverage intervals are referred to as islands. In-between time periods when there are no events occurring are called gaps (holes).\n\n\nFor our demo data, individual-2 has 4 event intervals, but just 3 coverage intervals: they are experiencing some event between\n\n2022-01-12 through 2022-02-08 (where event 2 completely overlaps and occurs within the duration of event 1)\n2022-09-16 through 2022-11-03 (duration fo event 3)\n2022-11-24 through 2022-12-11 (duration of last event, number 4)\n\nHence, our desired output table will comprise 3 rows for individual 2, with start and end times are described above for each coverage interval. Likewise, by visual inspection, individual 3, who experienced 6 events, will have only 3 coverage intervals as well, with one particular long coverage interval of back-to-back events beginning on 2022-03-21 and finally abating on 2022-06-23.\n\n\n\nExamining the gaps and islands solution to your data can reveal hidden assumptions about data processes or quality issues you might not be aware of. For example, perhaps certain overlap patterns violate assumptions about event frequencies, or some duration lengths are not physically possible. Typically, the data captured does not reflect the complete story.\nConsider medical databases housing patient medication prescriptions. The table captures PatientID, DispensedDate, and DaysSupply, from which an EndDate is derived representing date of supply depletion. The data as entered by pharmacists or business administrators for billing purposes or inventory management is only one part of the story, especially if our goal is to understand how patients are treated.\nFor example, suppose we observe multiple overlapping prescriptions for the same medication type (overlapping date ranges), but perhaps differing dose levels. It is not clear whether the patient has been instructed to take both prescriptions simultaneously (effective dose increase), or perhaps to switch to the lower dose before finishing the other prescription. We have missing contextual information! And, if examine overlapping date ranges among different medication types, we may find new or surprising treatment regimes warranting investigation.\nIf we know what we see is impossible, and we have high assurance of data validity and that they were not entered erroneously, we can learn even more. Perhaps it turns out a subset of prescriptions were returned-to-stock and never dispensed to the patient, requiring a check on another data field that we were not aware was being captured! With data in the wild, as we’re removed further away from the source (data origination), incomplete code-books, inaccurate code-books, or non-existent code-books are often the norm.\n\n\n\n\n\n\nNote\n\n\n\nUnless we already know what to look for, generalizing how we describe exposure duration patterns — as with the gaps and islands formulation — can help reveal new information requiring follow-up."
  },
  {
    "objectID": "posts/gaps-and-islands/post.html#visualization",
    "href": "posts/gaps-and-islands/post.html#visualization",
    "title": "The Gaps and Islands Problem",
    "section": "",
    "text": "Describing the patterns visually is useful. We plot all individual date ranges colored by individual ID, adding a position_dodge parameter so overlaps are revealed instead of lying right on top one another.\n\n\nCode\nlibrary(ggplot2)\n\nggplot(duration_data |&gt; filter(ID &lt;= 5),\n       aes(y = factor(ID), xmin = start_date, xmax = end_date, color = factor(ID))) +\n  geom_linerange(position = position_dodge2(width = .5), linewidth = 2) +\n  theme_bw() + \n  xlab(\"Start/ End Dates\") + ylab(\"Individual ID\") +\n  scale_x_date(date_breaks = \"1 month\") + \n  theme(\n    axis.text.x = element_text(size = 16, angle = 45),\n    axis.text.y = element_text(size = 16),\n    axis.title.x = element_text(size = 24),\n    axis.title.y = element_text(size = 24),\n    legend.position = 'none'\n  )\n\n\n\n\n\nDuration patterns by subject"
  },
  {
    "objectID": "posts/gaps-and-islands/post.html#what-do-we-wish-to-solve-for",
    "href": "posts/gaps-and-islands/post.html#what-do-we-wish-to-solve-for",
    "title": "The Gaps and Islands Problem",
    "section": "",
    "text": "Given the set-up, what is our goal state? Or, how do we want to collapse the data? Our input data is structured as one row per event interval (date range) per person. The desired output data is one row per coverage interval per person. By coverage, we mean a continuous block of time, defined by a start date and end date, during which the individual is experience some event (perhaps more than one).\n\n\n\n\n\n\nNote\n\n\n\nCoverage intervals are referred to as islands. In-between time periods when there are no events occurring are called gaps (holes).\n\n\nFor our demo data, individual-2 has 4 event intervals, but just 3 coverage intervals: they are experiencing some event between\n\n2022-01-12 through 2022-02-08 (where event 2 completely overlaps and occurs within the duration of event 1)\n2022-09-16 through 2022-11-03 (duration fo event 3)\n2022-11-24 through 2022-12-11 (duration of last event, number 4)\n\nHence, our desired output table will comprise 3 rows for individual 2, with start and end times are described above for each coverage interval. Likewise, by visual inspection, individual 3, who experienced 6 events, will have only 3 coverage intervals as well, with one particular long coverage interval of back-to-back events beginning on 2022-03-21 and finally abating on 2022-06-23."
  },
  {
    "objectID": "posts/gaps-and-islands/post.html#application-in-medicine",
    "href": "posts/gaps-and-islands/post.html#application-in-medicine",
    "title": "The Gaps and Islands Problem",
    "section": "",
    "text": "Examining the gaps and islands solution to your data can reveal hidden assumptions about data processes or quality issues you might not be aware of. For example, perhaps certain overlap patterns violate assumptions about event frequencies, or some duration lengths are not physically possible. Typically, the data captured does not reflect the complete story.\nConsider medical databases housing patient medication prescriptions. The table captures PatientID, DispensedDate, and DaysSupply, from which an EndDate is derived representing date of supply depletion. The data as entered by pharmacists or business administrators for billing purposes or inventory management is only one part of the story, especially if our goal is to understand how patients are treated.\nFor example, suppose we observe multiple overlapping prescriptions for the same medication type (overlapping date ranges), but perhaps differing dose levels. It is not clear whether the patient has been instructed to take both prescriptions simultaneously (effective dose increase), or perhaps to switch to the lower dose before finishing the other prescription. We have missing contextual information! And, if examine overlapping date ranges among different medication types, we may find new or surprising treatment regimes warranting investigation.\nIf we know what we see is impossible, and we have high assurance of data validity and that they were not entered erroneously, we can learn even more. Perhaps it turns out a subset of prescriptions were returned-to-stock and never dispensed to the patient, requiring a check on another data field that we were not aware was being captured! With data in the wild, as we’re removed further away from the source (data origination), incomplete code-books, inaccurate code-books, or non-existent code-books are often the norm.\n\n\n\n\n\n\nNote\n\n\n\nUnless we already know what to look for, generalizing how we describe exposure duration patterns — as with the gaps and islands formulation — can help reveal new information requiring follow-up."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "A collection of posts on data management principles using R for the aspiring programmer."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "QuartoBlog",
    "section": "",
    "text": "The Gaps and Islands Problem\n\n\n\n\n\nAlso known as the overlapping-date-ranges problem, where we study duration data to identify coverage intervals (or, holes)\n\n\n\n\n\n\nOct 4, 2032\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/gaps-and-islands/post.html#what-about-holes",
    "href": "posts/gaps-and-islands/post.html#what-about-holes",
    "title": "The Gaps and Islands Problem",
    "section": "What about holes?",
    "text": "What about holes?\n\nholes &lt;- islands |&gt; \n  group_by(ID) |&gt; \n  arrange(ID, start_date) |&gt; \n  mutate(\n    hole_start_date = end_date,\n    hole_end_date   = lead(start_date, 1)\n  )"
  }
]