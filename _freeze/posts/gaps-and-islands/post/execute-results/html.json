{
  "hash": "c225f05d829164e170f7e0ba5c011400",
  "result": {
    "markdown": "---\ntitle: 'The Gaps and Islands Problem'\ndate: '2023-10-04'\ndescription: 'Also known as the overlapping-date-ranges problem, where we study duration data to identify coverage intervals (or, holes)'\nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\ncode-annotations: true\n---\n\n\n# Problem formulation\n\nThe **gaps and islands** problem arises from analyzing duration data as commonly captured in databases. Duration data are *events* recorded with a *start* datetime and *end* datetime. Rows in the table correspond to unique events that someone is experiencing, or during which times the event is active. As individuals `ID` may have one or more event activity, such data are often stored in *long-form* as date ranges or *intervals*.\n\n::: callout-note\nFor simplicity, we assume only one type of event under study --- the data can be generalized to include an event-type field.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\n\nset.seed(12345)\n\n# 10 individuals\nID <- 1:10\n\n# 3 to 7 events per person \nn_events <- sample(3:7, 10, replace = TRUE)\n\nduration_data <- tibble(ID = rep(ID, n_events)) |> \n  mutate(\n    start_date = \n      sample(seq(as.Date('2022-01-01'), as.Date('2022-12-31'), by = \"day\"), n(), replace = TRUE),\n    # 3 days - 2 months episodes \n    end_date = start_date + sample(3:60, n(), replace = TRUE)   \n  ) |> \n  arrange(ID, start_date) |> \n  group_by(ID) |> \n  mutate(eventID = row_number())\n```\n:::\n\n\nFor example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(duration_data, n=15) |> kable()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> ID </th>\n   <th style=\"text-align:left;\"> start_date </th>\n   <th style=\"text-align:left;\"> end_date </th>\n   <th style=\"text-align:right;\"> eventID </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2022-02-09 </td>\n   <td style=\"text-align:left;\"> 2022-03-06 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2022-07-31 </td>\n   <td style=\"text-align:left;\"> 2022-08-09 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2022-09-14 </td>\n   <td style=\"text-align:left;\"> 2022-11-10 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2022-10-13 </td>\n   <td style=\"text-align:left;\"> 2022-11-10 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2022-10-21 </td>\n   <td style=\"text-align:left;\"> 2022-11-23 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 2022-01-12 </td>\n   <td style=\"text-align:left;\"> 2022-02-20 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 2022-01-14 </td>\n   <td style=\"text-align:left;\"> 2022-02-08 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 2022-09-16 </td>\n   <td style=\"text-align:left;\"> 2022-11-03 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 2022-11-24 </td>\n   <td style=\"text-align:left;\"> 2022-12-11 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-01-16 </td>\n   <td style=\"text-align:left;\"> 2022-01-23 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-03-21 </td>\n   <td style=\"text-align:left;\"> 2022-05-05 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-04-16 </td>\n   <td style=\"text-align:left;\"> 2022-05-23 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-05-21 </td>\n   <td style=\"text-align:left;\"> 2022-06-04 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-05-28 </td>\n   <td style=\"text-align:left;\"> 2022-06-23 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 2022-07-11 </td>\n   <td style=\"text-align:left;\"> 2022-08-08 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n::: callout-tip\nTo reveal the code how to simulate the demo data, click the `Code` text to expand above.\n:::\n\nHere, `ID` 1 experiences 5 distinct `eventID`s, with the first one occurring on 2/9 and lasting for 25 days until 3/6. The key observation is that `eventID` 4 **overlaps** with `eventID` 5 within `ID` 1, where event 5 beginning on 10/21 starts *before* event 4 has ended on 11/10.\n\n## Visualization\n\nVisualizing the date ranges of event occurrences is useful. We plot all individual event date ranges colored by `ID`, supplying a `position_dodge` so overlaps are revealed (instead of lying right on top one another).\n\n\n::: {.cell .fig-cap-location-margin}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\nggplot(duration_data |> filter(ID <= 5),\n       aes(y = factor(ID), xmin = start_date, xmax = end_date, color = factor(ID))) +\n  geom_linerange(position = position_dodge2(width = .5), linewidth = 2) +\n  theme_bw() + \n  xlab(\"Start/ End Dates\") + ylab(\"Individual ID\") +\n  scale_x_date(date_breaks = \"1 month\") + \n  theme(\n    axis.text.x = element_text(size = 16, angle = 45),\n    axis.text.y = element_text(size = 16),\n    axis.title.x = element_text(size = 24),\n    axis.title.y = element_text(size = 24),\n    legend.position = 'none'\n  )\n```\n\n::: {.cell-output-display}\n![Duration patterns by subject](post_files/figure-html/unnamed-chunk-3-1.png){width=1440}\n:::\n:::\n\n\n## What do we wish to solve for?\n\nGiven the set-up, how do we want to collapse the data? Our *input data* is structured as one row per date range per person. The desired *output data* is one row per **coverage interval** per person. By coverage, we mean a continuous block of time, defined by a start date and end date, during which the individual is experiencing one or more active events.\n\n::: callout-note\nCoverage intervals are referred to as **islands**. In-between time periods when there are no events occurring (no date ranges, overlapping or otherwise) are called **gaps** (holes).\n:::\n\nFor our demo data, within `ID` 2, there are 4 `eventID`s, but just 3 coverage intervals (**islands**): some event is active between\n\n(1) 2022-01-12 through 2022-02-08 (where the date range of event 2 completely overlaps and within the duration time of event 1)\n(2) 2022-09-16 through 2022-11-03 (duration of `eventID` 3)\n(3) 2022-11-24 through 2022-12-11 (duration of last `eventID` 4)\n\nHence our desired output table will comprise 3 rows for `ID` 2, with start and end times as described above for each coverage interval. Likewise, by visual inspection, `ID` 3, who experienced 6 events, will have only 3 coverage intervals as well, with one particularly long coverage interval (of back-to-back events) beginning on 2022-03-21 and finally abating on 2022-06-23.\n\n## Application in Medicine\n\nExamining the **gaps and islands** solution can reveal hidden assumptions about data processes or quality issues you might not be aware of. For example, perhaps certain overlap patterns violate assumptions about event frequencies, or some duration lengths and patterns are not physically possible. Typically, the data captured does not reflect the complete story.\n\nConsider medical databases housing patient medication prescriptions. The table captures `PatientID`, `DispensedDate`, and `DaysSupply`, from which an `EndDate` is derived representing date of supply depletion relative to dispense time. The data as entered by pharmacists or business administrators for billing purposes or inventory management is only one part of the story, especially if our goal is to understand **how** patients are treated.\n\nFor example, suppose we observe multiple overlapping prescriptions for the same medication type (overlapping date ranges), but perhaps differing dose levels. It is not clear whether the patient has been *instructed* to take both prescriptions simultaneously (effective dose increase), or perhaps to switch to the lower dose before finishing the other prescription. **We have missing contextual information!** And, if we observe overlapping date ranges among *different* medication types, we may find new or surprising treatment regimes warranting investigation.\n\nIf we **know** what we see is impossible, and we have high assurance of data validity (they were not entered erroneously), we investigate further. Perhaps, it turns out a subset of prescriptions were *returned-to-stock* and were never picked up by the patient, requiring a check on another data field that we were not aware was being captured. With data in the wild, as we're removed further away from the source of **data origination**, incomplete code-books, inaccurate code-books, or non-existent code-books represent the norm.\n\n::: callout-note\nUnless we already know what to look for, generalizing how we describe event patterns can help reveal new information requiring follow-up.\n:::\n\n# The Gaps-and-Islands Algorithm\n\nNow we present the algorithm to solve the **gaps and islands** problem. To proceed systematically, we order the data by `ID` and ascending `start_date` of event times. For each new event beginning within `ID` (from left to right) we want to know does this event overlap with the previous one? That is, does it begin before the previous one has ended? If not, it *may* start a new chain (island).\n\nBut checking against the immediate previous event is not enough --- potentially, there may be even earlier overlapping events with end times exceeding some or all of the subsequent events. Then the current event under consideration forms the start of a new island only if it begins past the **maximum** end times over all prior events.\n\nWe can give grouping identifiers to those date ranges forming a unique island (events belonging to the same island having the same identifier). The trick is to use an **accumulator** over the *new island start* flag, because it will only increment when starting a new island.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngaps_and_islands <- \nduration_data |> \n  arrange(ID, start_date) |>    # <1>\n  group_by(ID) |>               # <1> \n  mutate(\n    prev_end      = if_else(eventID == 1, end_date, lag(end_date, 1)), # <2>   \n    max_prior_end = as.Date(cummax(as.numeric(prev_end))),             # <3>\n    new_island    = start_date > max_prior_end,                        # <4>\n    coverageID    = cumsum(new_island)                                 # <5> \n  ) \n```\n:::\n\n\n1.  Proceed left to right systematically (beginning with earliest events). All computations are done **within** individual\n2.  Get the prior event end date. By convention, use the current end if it is the very first event\n3.  Maximum over all prior end times *relative* to the current event --- but excluding the current interval. Note `cummax` function does not work on *datetypes* directly\n4.  New island indicator\n5.  Accumulator trick to assign island IDs to each date range **within** individual\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngaps_and_islands |>\n  mutate_if(is.Date, ~ format(.x, '%m/%d')) |> \n  head(n=15) |> kable()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> ID </th>\n   <th style=\"text-align:left;\"> start_date </th>\n   <th style=\"text-align:left;\"> end_date </th>\n   <th style=\"text-align:right;\"> eventID </th>\n   <th style=\"text-align:left;\"> prev_end </th>\n   <th style=\"text-align:left;\"> max_prior_end </th>\n   <th style=\"text-align:left;\"> new_island </th>\n   <th style=\"text-align:right;\"> coverageID </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 02/09 </td>\n   <td style=\"text-align:left;\"> 03/06 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 03/06 </td>\n   <td style=\"text-align:left;\"> 03/06 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 07/31 </td>\n   <td style=\"text-align:left;\"> 08/09 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 03/06 </td>\n   <td style=\"text-align:left;\"> 03/06 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 09/14 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 08/09 </td>\n   <td style=\"text-align:left;\"> 08/09 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 10/13 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 10/21 </td>\n   <td style=\"text-align:left;\"> 11/23 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:left;\"> 11/10 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 01/12 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 01/14 </td>\n   <td style=\"text-align:left;\"> 02/08 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 09/16 </td>\n   <td style=\"text-align:left;\"> 11/03 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 02/08 </td>\n   <td style=\"text-align:left;\"> 02/20 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 11/24 </td>\n   <td style=\"text-align:left;\"> 12/11 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> 11/03 </td>\n   <td style=\"text-align:left;\"> 11/03 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 01/16 </td>\n   <td style=\"text-align:left;\"> 01/23 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:left;\"> 01/23 </td>\n   <td style=\"text-align:left;\"> 01/23 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 03/21 </td>\n   <td style=\"text-align:left;\"> 05/05 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:left;\"> 01/23 </td>\n   <td style=\"text-align:left;\"> 01/23 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 04/16 </td>\n   <td style=\"text-align:left;\"> 05/23 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 05/05 </td>\n   <td style=\"text-align:left;\"> 05/05 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 05/21 </td>\n   <td style=\"text-align:left;\"> 06/04 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:left;\"> 05/23 </td>\n   <td style=\"text-align:left;\"> 05/23 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 05/28 </td>\n   <td style=\"text-align:left;\"> 06/23 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:left;\"> 06/04 </td>\n   <td style=\"text-align:left;\"> 06/04 </td>\n   <td style=\"text-align:left;\"> FALSE </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:left;\"> 07/11 </td>\n   <td style=\"text-align:left;\"> 08/08 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:left;\"> 06/23 </td>\n   <td style=\"text-align:left;\"> 06/23 </td>\n   <td style=\"text-align:left;\"> TRUE </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n::: callout-note\nWithin individual, we start counting the first island at 0\n:::\n\n::: callout-important\nAs implemented here, a coverage interval is identified uniquely from the combination of *both* `coverageID` **and** individual `ID`.\n:::\n\nFinally, we collapse down to unique coverage intervals by summarizing over individual and their `coverageID`s:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nislands <-\ngaps_and_islands |> \n  group_by(ID, coverageID) |> \n  summarise(\n    start_date = first(start_date),\n    end_date   = max(end_date) \n  )  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nislands |> \n  head(n=10) |> kable() |> kable_styling(full_width=FALSE) |> \n  column_spec(1:4, width = \"20em\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> ID </th>\n   <th style=\"text-align:right;\"> coverageID </th>\n   <th style=\"text-align:left;\"> start_date </th>\n   <th style=\"text-align:left;\"> end_date </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:right;width: 20em; \"> 0 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-02-09 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-03-06 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-07-31 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-08-09 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-09-14 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-11-23 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:right;width: 20em; \"> 0 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-01-12 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-02-20 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-09-16 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-11-03 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-11-24 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-12-11 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 3 </td>\n   <td style=\"text-align:right;width: 20em; \"> 0 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-01-16 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-01-23 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 3 </td>\n   <td style=\"text-align:right;width: 20em; \"> 1 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-03-21 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-06-23 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 3 </td>\n   <td style=\"text-align:right;width: 20em; \"> 2 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-07-11 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-08-08 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;width: 20em; \"> 4 </td>\n   <td style=\"text-align:right;width: 20em; \"> 0 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-03-01 </td>\n   <td style=\"text-align:left;width: 20em; \"> 2022-04-21 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nLet's visualize our solution (proof by picture). We plot all *islands* for all `ID`s from start to end as thick transparent gray bars.\n\n\n::: {.cell .fig-cap-location-margin}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(ggplot2)\n\n# start with original date range data \nggplot(duration_data |> filter(ID <= 5),\n       aes(y = factor(ID), xmin = start_date, xmax = end_date, color = factor(ID))) +\n  geom_linerange(position = position_dodge2(width = .5), linewidth = 2) +\n  \n  # overlay the islands \n  geom_linerange(data = islands |> filter(ID <= 5),\n                 mapping = aes(y = factor(ID), xmin = start_date, xmax = end_date),\n                 color = \"grey\", alpha = .8, linewidth = 5) + \n  \n  theme_bw() + \n  xlab(\"Start/ End Dates\") + ylab(\"Individual ID\") +\n  scale_x_date(date_breaks = \"1 month\") + \n  theme(\n    axis.text.x = element_text(size = 16, angle = 45),\n    axis.text.y = element_text(size = 16),\n    axis.title.x = element_text(size = 24),\n    axis.title.y = element_text(size = 24),\n    legend.position = 'none'\n  )\n```\n\n::: {.cell-output-display}\n![Duration patterns by subject](post_files/figure-html/unnamed-chunk-8-1.png){width=1440}\n:::\n:::\n",
    "supporting": [
      "post_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}