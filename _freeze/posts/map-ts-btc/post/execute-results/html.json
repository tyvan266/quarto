{
  "hash": "4b8a4e9fd76e9a4e1d59c15c8bd3a4e2",
  "result": {
    "markdown": "---\ntitle: 'Describing time series data'\ndate: '2023-10-24'\ndescription: 'Application to Bitcoin financial price' \nexecute: \n  message: false\n  warning: false\neditor_options: \n  chunk_output_type: console\ncode-annotations: true\ntoc: true\ntoc-depth: 3\n---\n\n\n# Period indicators \n\nData over time \n\nOne row per day, month, year, etc. \n\nSometimes level is too fine.. we want to summarize more coarsely, say monthly or weekly \n\nTrick: create period indicators, use regression for basic averages \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\n\nset.seed(12345)\n\nbtc <- \n  read_csv('BTC-USD.csv')           |>\n  select(Date, Close)               |> \n  mutate(Close = as.numeric(Close)) |> \n  filter(\n    Date <= as.Date('2023-10-22', '%Y-%m-%d'))\n\nbtc_monthly_indicator <- \nbtc |> \n  mutate(m = month(Date)) \n\n\nbtc_monthly_indicator |> sample_n(size = 10) |>  kable() \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:right;\"> Close </th>\n   <th style=\"text-align:right;\"> m </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-05-22 </td>\n   <td style=\"text-align:right;\"> 26851.28 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-02-20 </td>\n   <td style=\"text-align:right;\"> 24829.15 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-27 </td>\n   <td style=\"text-align:right;\"> 29210.69 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:right;\"> 29041.86 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-08 </td>\n   <td style=\"text-align:right;\"> 29765.49 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-01 </td>\n   <td style=\"text-align:right;\"> 26819.97 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-04-03 </td>\n   <td style=\"text-align:right;\"> 27790.22 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-03-16 </td>\n   <td style=\"text-align:right;\"> 25052.79 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-04 </td>\n   <td style=\"text-align:right;\"> 29074.09 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-09-15 </td>\n   <td style=\"text-align:right;\"> 26608.69 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\nRun basic regression, use `predict` to get fitted values. Graph and overlay \n\nMonths as **categorical** variables (factors)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbtc_fit <- lm(Close ~ factor(m), data = btc_monthly_indicator)\n\nbtc_monthly_indicator$fit <- predict.lm(btc_fit, btc_monthly_indicator)\n\nbtc_monthly_indicator |> sample_n(size = 10) |>  kable() \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:right;\"> Close </th>\n   <th style=\"text-align:right;\"> m </th>\n   <th style=\"text-align:right;\"> fit </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-03-27 </td>\n   <td style=\"text-align:right;\"> 27139.89 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 25116.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-03-16 </td>\n   <td style=\"text-align:right;\"> 25052.79 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 25116.90 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-02-07 </td>\n   <td style=\"text-align:right;\"> 23264.29 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 23304.54 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-04-13 </td>\n   <td style=\"text-align:right;\"> 30399.07 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 28857.57 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-09-23 </td>\n   <td style=\"text-align:right;\"> 26579.39 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 26306.14 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-02-09 </td>\n   <td style=\"text-align:right;\"> 21819.04 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 23304.54 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-10-13 </td>\n   <td style=\"text-align:right;\"> 26862.38 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 27958.07 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-09-14 </td>\n   <td style=\"text-align:right;\"> 26539.67 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 26306.14 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-31 </td>\n   <td style=\"text-align:right;\"> 29230.11 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 30057.47 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-01-12 </td>\n   <td style=\"text-align:right;\"> 18869.59 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 20250.72 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nGraph the price data, overlay with fitted values from the model \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(btc_monthly_indicator, aes(x = Date, y = Close)) + \n  geom_point(size = 1) +\n  geom_line(size = .8) +\n  \n  geom_line(aes(x = Date, y = fit), linewidth = 1, color = \"red\") + \n  \n  scale_y_continuous(breaks = seq(16000, 32000, 1000)) +\n  scale_x_date(breaks = \"1 month\") + \n  \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](post_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nConfirm that, using monthly indicators is the same as just computing the average monthly price \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbtc_monthly_avg <- \n  btc_monthly_indicator |> \n  group_by(m)           |> \n  summarise(Close = mean(Close))\n\nbtc_monthly_avg$Date <- seq.Date(from = as.Date('2023-01-15'), to = as.Date('2023-10-15'), length.out = 10)\n```\n:::\n\n\nNow overlay these monthly averages onto the plot \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(btc_monthly_indicator, aes(x = Date, y = Close)) + \n  geom_point(size = 1) +\n  geom_line(size = .8) +\n  \n  geom_line(aes(x = Date, y = fit), linewidth = 1, color = \"red\") + \n  \n  geom_point(btc_monthly_avg, mapping=aes(x = Date, y = Close), size = 5, shape = 1, color = 'blue') +\n  \n  scale_y_continuous(breaks = seq(16000, 32000, 1000)) +\n  scale_x_date(breaks = \"1 month\") + \n  \n  \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](post_files/figure-html/unnamed-chunk-5-1.png){width=1152}\n:::\n:::\n\n\n\n\n\n::: callout-tip \nDespite their underlying statistical assumptions, **models** can be used for descriptive summaries (exploratory analyses). Inference is a different story! \n:::\n\n\n# Smoothers \n\nRolling averages \n\nIn finance, 2 weeks, 1 month, 3 months\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbtc_rolling_means <- \nbtc |> \n  mutate(\n    roll_1week = map_dbl(Date, \\(.x) mean(Close[Date <= .x & Date >= .x - 7])),\n    roll_1mon  = map_dbl(Date, \\(.x) mean(Close[Date <= .x & Date >= .x - 30])),\n    roll_3mon  = map_dbl(Date, \\(.x) mean(Close[Date <= .x & Date >= .x - 90]))\n  )\n```\n:::\n\n\nPlot it \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(btc_rolling_means, aes(x = Date, y = Close)) + \n  geom_point(size = 1) +\n  geom_line(size = .8) +\n  \n  geom_line(aes(y = roll_1week), linewidth = 1, color = \"red\") + \n  geom_line(aes(y = roll_1mon), linewidth = 1, color = \"blue\") + \n  geom_line(aes(y = roll_3mon), linewidth = 1, color = \"orange\") + \n\n  scale_y_continuous(breaks = seq(16000, 32000, 1000)) +\n  scale_x_date(breaks = \"1 month\") + \n  \n  \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](post_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\nHow does volatility change over time? \n\n",
    "supporting": [
      "post_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}